apply plugin: 'java'

targetCompatibility = 1.8
sourceCompatibility = 1.8
version = "1.0.0"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    testRuntime("org.junit.platform:junit-platform-launcher:1.4.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.4.0")
    testRuntime("org.junit.vintage:junit-vintage-engine:5.4.0")

    compile group: 'org.xmlunit', name: 'xmlunit-core', version: '2.6.2'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.5'
    compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.28'
    compile group: 'org.jgrapht', name: 'jgrapht-core', version: '1.3.0'
    compile group: 'org.jgrapht', name: 'jgrapht-ext', version: '1.3.0'
    compile group: 'org.jgrapht', name: 'jgrapht-io', version: '1.3.0'
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'

    compile fileTree(dir: 'lib', include: '*.jar')
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.unl.cse.iotcom.FormalAnalyzer'
    }
}

task runAppTester(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.unl.cse.iotcom.AppTester'
    workingDir = file('../models/')
    args = ['../appInstances', '../fixed_Instances', '../IFTTT_App_Instances']
}

task runFormalAnalyzer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.unl.cse.iotcom.FormalAnalyzer'
    workingDir = file('../')
    systemProperty "java.library.path", "$projectDir/lib"
    jvmArgs = ['-Xmx8g']
}

task runBundler(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.unl.cse.iotcom.Bundler'
    workingDir = file('../')
}

task runAll(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.unl.cse.iotcom.IoTChecker'
    workingDir = file('../')
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'edu.unl.cse.iotcom.FormalAnalyzer'
    }
    baseName = 'iotcom-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.withType(Test) {
    systemProperty "java.library.path", "$projectDir/lib"
}